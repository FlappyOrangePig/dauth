plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id "org.jetbrains.dokka"
}

android {
    namespace 'com.infras.dauthsdk'
    ndkVersion '22.1.7171670'

    defaultConfig {
        versionName versions.version_name
        buildConfigField("String", "SDK_VERSION", "\"${versions.version_name}\"" )
        manifestPlaceholders = [sdkVersion:  versions.version_name]

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            ldLibs 'c++_shared'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            //version "3.26.4"
        }
    }

    lintOptions {
        disable 'TimberArgCount', 'TimberArgTypes', 'TimberTagLength', 'BinaryOperationInTimber',
                'LogNotTimber', 'StringFormatInTimber', 'ThrowableNotAtBeginning'
    }

    buildFeatures { viewBinding = true }
}

dependencies {
    implementation libraries.core_ktx
    implementation libraries.appcompat
    implementation libraries.material
    implementation libraries.activity_ktx
    testImplementation libraries.junit
    testImplementation libraries.mockito_core
    androidTestImplementation libraries.ext_junit
    androidTestImplementation libraries.espresso_core

    //日志拦截器
    implementation libraries.okhttp_logging_interceptor
    implementation libraries.okhttp
    //implementation 'com.facebook.android:facebook-android-sdk:[4,5)'

    // implementation platform('com.google.firebase:firebase-bom:31.4.0')
    // implementation 'com.google.firebase:firebase-auth-ktx'

    // Google sdk
    implementation libraries.google_service_auth
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // twitter -- 官方不再维护，拷贝com.twitter.android的代码自己维护
    // implementation libraries.twitter
    // implementation libraries.twitter_core
    // twitter依赖
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // moshi
    implementation libraries.moshi
    kapt libraries.moshi_kotlin_code_gen

    // jwt
    //implementation libraries.jwt

    // web3j
    api libraries.web3j_core
    api libraries.web3j_contract
    api libraries.web3j_abi

    // WalletConnect sign-sdk
    //implementation(platform("com.walletconnect:android-bom:1.12.0"))
    /*implementation("com.walletconnect:android-core") {
        // 与web3j重复
        exclude group: 'org.bouncycastle'
    }
    implementation("com.walletconnect:sign") {
        // 与web3j重复
        exclude group: 'org.bouncycastle'
    }*/
}

apply from: '../maven_publish.gradle'

/******************************************************************************
 * Dokka配置
 * 参考：
 * https://github.com/Kotlin/dokka/issues/324
 * https://kotlinlang.org/docs/dokka-gradle.html#package-options
 ******************************************************************************/
import org.jetbrains.dokka.gradle.DokkaTask
import org.jetbrains.dokka.DokkaConfiguration.Visibility
afterEvaluate { project ->
    tasks.withType(DokkaTask.class) {
        dokkaSourceSets {
            configureEach {
                perPackageOption {
                    matchingRegex.set(".*")
                    suppress.set(true)
                    skipDeprecated.set(false)
                    reportUndocumented.set(false)
                    documentedVisibilities.set([Visibility.PUBLIC])
                }
                perPackageOption {
                    matchingRegex.set("com.infras.dauthsdk.api")
                    suppress.set(false)
                    skipDeprecated.set(false)
                    reportUndocumented.set(false)
                    documentedVisibilities.set([Visibility.PUBLIC])
                }
            }
        }
    }
}
